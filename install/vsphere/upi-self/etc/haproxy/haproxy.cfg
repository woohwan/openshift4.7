[root@lb haproxy]# cat haproxy.cfg
#---------------------------------------------------------------------
# Example configuration for a possible web application.  See the
# full configuration options online.
#
#   https://www.haproxy.org/download/1.8/doc/configuration.txt
#
#---------------------------------------------------------------------

#---------------------------------------------------------------------
# Global settings
#---------------------------------------------------------------------
global
    # to have these messages end up in /var/log/haproxy.log you will
    # need to:
    #
    # 1) configure syslog to accept network log events.  This is done
    #    by adding the '-r' option to the SYSLOGD_OPTIONS in
    #    /etc/sysconfig/syslog
    #
    # 2) configure local2 events to go to the /var/log/haproxy.log
    #   file. A line like the following can be added to
    #   /etc/sysconfig/syslog
    #
    #    local2.*                       /var/log/haproxy.log
    #
    log         127.0.0.1 local2

    chroot      /var/lib/haproxy
    pidfile     /var/run/haproxy.pid
    maxconn     4000
    user        haproxy
    group       haproxy
    daemon

    # turn on stats unix socket
    stats socket /var/lib/haproxy/stats

    # utilize system-wide crypto-policies
    ssl-default-bind-ciphers PROFILE=SYSTEM
    ssl-default-server-ciphers PROFILE=SYSTEM

#---------------------------------------------------------------------
# common defaults that all the 'listen' and 'backend' sections will
# use if not designated in their block
#---------------------------------------------------------------------
defaults
    log                     global
    mode                                    http
    option                                  httplog
    option                  dontlognull
    option http-server-close
    option                  redispatch
    retries                 3
    timeout http-request    10s
    timeout queue           1m
    timeout connect         10s
    timeout client          1m
    timeout server          1m
    timeout http-keep-alive 10s
    timeout check           10s
    maxconn                 3000

# Enable HAProxy stats
listen  stats
    bind *:9000
    stats uri /stats
    stats refresh 10000ms

# Kube API Server
frontend k8s_api
    bind *:6443
    default_backend k8s_api
    mode tcp
    option tcplog

backend k8s_api
    mode tcp
    balance source
    server  bootstrap       172.20.2.253:6443       check
    server  cp0             172.20.2.235:6443       check
    server  cp1             172.20.2.236:6443       check
    server  cp2             172.20.2.237:6443       check

# OCP Machine Config Server
frontend machine_config
    bind *:22623
    default_backend machine_config
    mode tcp
    option tcplog

backend machine_config
    mode tcp
    balance source
    server  bootstrap       172.20.2.253:22623      check
    server  cp0             172.20.2.235:22623      check
    server  cp1             172.20.2.236:22623      check
    server  cp2             172.20.2.237:22623      check


# OCP Ingress - layer 4 tcp mode for each. Ingress Controller will handle layer 7.
frontend router_https
    bind *:443
    default_backend router_https
    mode tcp

backend router_https
    mode tcp
    balance source
    server  cptnod0         172.20.2.245:443        check
    server  cptnod1         172.20.2.246:443        check

frontend router_http
    bind *:80
    default_backend router_http
    mode tcp

backend router_http
    mode tcp
    balance source
    server  cptnod0         172.20.2.245:80 check
    server  cptnod1         172.20.2.246:80 check